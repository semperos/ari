/ base[s] returns the last element of a path.
base:{[path]path or:"."; (rx`([^/]*)/*$`[path]1)or"/"}
/ clean[s] returns the shortest equivalent path by lexical processing.  It
/ deduplicates slashes, eliminates each single dot, inner .. elements after
/ non-.. dir, and .. elements that begin a rooted path. Only root "/" ends in
/ slash.  An empty path result produces ".".
clean:{[path]
  elts:(!""){?[and[y~"..";x;~".."~*|x];-1_x;x,y]}/("."=)^"/"!path
  ?[isAbs path; "/"+"/"/&elts!~&\elts=".."; ("/"/elts)or"."]}
/ dir[s] returns all but the last element of a path, after cleaning.
dir:{[path]clean@*split path}
/ ext[s] returns the filename extension.
ext:{[path]rx`\.[^/.]*$`[path;"s"]}
/ isAbs[s] reports whether the path is absolute.
isAbs:{[path]path[;1]~"/"}
/ join[S] joins non-empty path elements into a cleaned slash-separated path.
join:{[elts]?[+/&elts;clean@"/"/(""=)^elts;""]}
/ split[s] splits a path just after any final slash into a (dir;filename) pair.
split:{[path]1_rx`^(.*?/?)([^/]*)$`path}
1
